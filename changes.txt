diff --git a/minard/mtca_crate_mapping.py b/minard/mtca_crate_mapping.py
index da326d4..9a41176 100644
--- a/minard/mtca_crate_mapping.py
+++ b/minard/mtca_crate_mapping.py
@@ -11,7 +11,7 @@ OWL_LABELS = {1: 17, 2: 13, 3: 18, 4: 3}
 choices = [(19, "None")] + [(i, str(i+1)) for i in range(19)]
 
 owl_choices = [(-1, "None")]
-for label, crate in OWL_LABELS.iteritems():
+for label, crate in OWL_LABELS.items():
     owl_choices.append((crate, str(label)))
 
 RETRIGGER_LOGIC = {
diff --git a/minard/nlrat.py b/minard/nlrat.py
index 9e3fbec..d0e4af8 100644
--- a/minard/nlrat.py
+++ b/minard/nlrat.py
@@ -1,4 +1,4 @@
-import detector_state
+import minard.detector_state
 import glob
 import os
 import re
diff --git a/minard/polling.py b/minard/polling.py
index c841fac..62ec63a 100644
--- a/minard/polling.py
+++ b/minard/polling.py
@@ -1,5 +1,5 @@
 from .db import engine 
-import detector_state
+import minard.detector_state
 
 # PMT Type defines
 PMT_TYPES = {
diff --git a/minard/presn.py b/minard/presn.py
index e360561..9698e15 100644
--- a/minard/presn.py
+++ b/minard/presn.py
@@ -84,8 +84,8 @@ def load_presn_search(search, start, end, offset, limit):
         try:
             all = db.view(view, startkey=startkey, endkey=endkey, descending=False)
             total = len(all.rows)
-            print "OK, run gives us", total
-            print all
+            print ("OK, run gives us", total)
+            print (all)
         except:
             app.logger.warning("Code returned KeyError searching for presn information in the couchDB.")
 
diff --git a/minard/shifter_information.py b/minard/shifter_information.py
index 1b558d5..8623065 100644
--- a/minard/shifter_information.py
+++ b/minard/shifter_information.py
@@ -2,7 +2,7 @@ import psycopg2
 from .db import engine
 from .views import app
 from wtforms import Form, StringField, SelectField, validators
-from wtforms.fields.html5 import EmailField
+from wtforms.fields import EmailField
 from wtforms.validators import ValidationError
 
 VALID_COUNTRIES = [
diff --git a/minard/timeseries.py b/minard/timeseries.py
index 92d1a0c..cdc8fac 100644
--- a/minard/timeseries.py
+++ b/minard/timeseries.py
@@ -2,7 +2,7 @@ from __future__ import print_function
 import sys
 from redis import Redis
 import bisect
-from redistools import maxcard, avgcard, maxcrate, avgcrate
+from .redistools import maxcard, avgcard, maxcrate, avgcrate
 from .db import engine
 
 redis = Redis()
diff --git a/minard/views.py b/minard/views.py
index 0e1d057..e2d6c20 100755
--- a/minard/views.py
+++ b/minard/views.py
@@ -6,7 +6,7 @@ import time
 from redis import Redis
 from os.path import join
 import json
-import HLDQTools
+import minard.HLDQTools
 import requests
 from .tools import parseiso, total_seconds
 from collections import deque, namedtuple
@@ -17,29 +17,29 @@ from math import isnan
 import os
 import sys
 import random
-import detector_state
-import orca
-import nlrat
-import nearline_monitor
-import nearlinedb
-import nearline_settings
-import pingcratesdb
-import triggerclockjumpsdb
-import muonsdb
-import redisdb
-import cssProc as cssproc
-import fiber_position
-import occupancy
-import channelflagsdb
-import dropout
-import pmtnoisedb
-import gain_monitor
-import activity
-import scintillator_level
-import burst as burst_f
-import presn as presn_f
-from shifter_information import get_shifter_information, set_shifter_information, ShifterInfoForm, get_experts, get_supernova_experts
-from run_list import golden_run_list
+import minard.detector_state
+import minard.orca
+import minard.nlrat
+import minard.nearline_monitor
+import minard.nearlinedb
+import minard.nearline_settings
+import minard.pingcratesdb
+import minard.triggerclockjumpsdb
+import minard.muonsdb
+import minard.redisdb
+import minard.cssProc as cssproc
+import minard.fiber_position
+import minard.occupancy
+import minard.channelflagsdb
+import minard.dropout
+import minard.pmtnoisedb
+import minard.gain_monitor
+import minard.activity
+import minard.scintillator_level
+import minard.burst as burst_f
+import minard.presn as presn_f
+from minard.shifter_information import get_shifter_information, set_shifter_information, ShifterInfoForm, get_experts, get_supernova_experts
+from minard.run_list import golden_run_list
 from .polling import polling_runs, polling_info, polling_info_card, polling_check, get_cmos_rate_history, polling_summary, get_most_recent_polling_info, get_vmon, get_base_current_history, get_vmon_history
 from .channeldb import ChannelStatusForm, upload_channel_status, get_channels, get_channel_status, get_channel_status_form, get_channel_history, get_pmt_info, get_nominal_settings, get_discriminator_threshold, get_all_thresholds, get_maxed_thresholds, get_gtvalid_lengths, get_pmt_types, pmt_type_description, get_fec_db_history
 from .ecaldb import ecal_state, penn_daq_ccc_by_test, get_penn_daq_tests
@@ -49,8 +49,8 @@ from .resistor import get_resistors, ResistorValuesForm, get_resistor_values_for
 from .pedestalsdb import get_pedestals, bad_pedestals, qhs_by_channel
 from datetime import datetime
 from functools import wraps, update_wrapper
-from dead_time import get_dead_time, get_dead_time_runs, get_dead_time_run_by_key
-from radon_monitor import get_radon_monitor
+from minard.dead_time import get_dead_time, get_dead_time_runs, get_dead_time_run_by_key
+from minard.radon_monitor import get_radon_monitor
 
 TRIGGER_NAMES = \
 ['100L',
@@ -643,7 +643,7 @@ def orca_session_logs():
     results = orca.get_orca_session_logs(limit, offset)
 
     if results is None:
-	return render_template('orca_session_logs.html', error="No orca session logs.")
+        return render_template('orca_session_logs.html', error="No orca session logs.")
 
     return render_template('orca_session_logs.html', results=results, limit=limit, offset=offset)
 
@@ -654,7 +654,7 @@ def nhit_monitor_thresholds():
     results = detector_state.get_nhit_monitor_thresholds(limit, offset)
 
     if results is None:
-	return render_template('nhit_monitor_thresholds.html', error="No nhit monitor records.")
+        return render_template('nhit_monitor_thresholds.html', error="No nhit monitor records.")
 
     return render_template('nhit_monitor_thresholds.html', results=results, limit=limit, offset=offset)
 
@@ -663,7 +663,7 @@ def nhit_monitor(key):
     results = detector_state.get_nhit_monitor(key)
 
     if results is None:
-	return render_template('nhit_monitor.html', error="No nhit monitor record with key %i." % key)
+        return render_template('nhit_monitor.html', error="No nhit monitor record with key %i." % key)
 
     return render_template('nhit_monitor.html', results=results)
 
@@ -677,7 +677,7 @@ def nhit_monitor_thresholds_nearline():
     results = detector_state.get_nhit_monitor_thresholds_nearline(limit, offset, sort_by, run_range_low, run_range_high)
 
     if results is None:
-	return render_template('nhit_monitor_thresholds_nearline.html', error="No nhit monitor records.")
+        return render_template('nhit_monitor_thresholds_nearline.html', error="No nhit monitor records.")
 
     return render_template('nhit_monitor_thresholds_nearline.html', results=results, limit=limit, offset=offset, sort_by=sort_by, run_range_low=run_range_low, run_range_high=run_range_high)
 
@@ -686,7 +686,7 @@ def nhit_monitor_nearline(key):
     results = detector_state.get_nhit_monitor_nearline(key)
 
     if results is None:
-	return render_template('nhit_monitor_nearline.html', error="No nhit monitor record with key %i." % key)
+        return render_template('nhit_monitor_nearline.html', error="No nhit monitor record with key %i." % key)
 
     return render_template('nhit_monitor_nearline.html', results=results)
 
@@ -695,7 +695,7 @@ def trigger():
     results = detector_state.get_latest_trigger_scans()
 
     if results is None:
-	return render_template('trigger.html', error="No trigger scans.")
+        return render_template('trigger.html', error="No trigger scans.")
 
     return render_template('trigger.html', results=results)
 
diff --git a/requirements.txt b/requirements.txt
index 468a1ac..c91be84 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -10,3 +10,5 @@ psycopg2
 #alabaster
 couchdb
 wtforms
+requests
+email_validator
